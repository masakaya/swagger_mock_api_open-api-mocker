"use strict";
const validators_1 = require("./lib/validators");
function ajvOpenApi(ajv, options) {
    if ((options === null || options === void 0 ? void 0 : options.useDraft04) !== false) {
        ajv.addMetaSchema(require("ajv/lib/refs/json-schema-draft-04.json"));
    }
    ajv.addFormat("int32", { type: "number", validate: validators_1.int32 });
    ajv.addFormat("int64", { type: "number", validate: validators_1.int64 });
    ajv.addFormat("float", { type: "number", validate: validators_1.float });
    ajv.addFormat("double", { type: "number", validate: validators_1.double });
    ajv.addFormat("byte", { type: "string", validate: validators_1.byte });
    return ajv;
}
(function (ajvOpenApi) {
    function createOptions(options) {
        return {
            schemaId: "auto",
            format: "full",
            coerceTypes: true,
            unknownFormats: "ignore",
            useDefaults: true,
            nullable: true,
            ...options
        };
    }
    ajvOpenApi.createOptions = createOptions;
})(ajvOpenApi || (ajvOpenApi = {}));
module.exports = ajvOpenApi;
